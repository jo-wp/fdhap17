{"version":3,"names":["fastDeepEqual","v4","uuid","apiFetch","addQueryArgs","deprecated","getNestedValue","setNestedValue","receiveItems","removeItems","receiveQueriedItems","getOrLoadEntitiesConfig","DEFAULT_ENTITY_KEY","createBatch","STORE_NAME","getSyncProvider","receiveUserQuery","queryID","users","type","Array","isArray","receiveCurrentUser","currentUser","addEntities","entities","receiveEntityRecords","kind","name","records","query","invalidateCache","edits","meta","map","record","status","title","action","receiveCurrentTheme","currentTheme","__experimentalReceiveCurrentGlobalStylesId","currentGlobalStylesId","id","__experimentalReceiveThemeBaseGlobalStyles","stylesheet","globalStyles","__experimentalReceiveThemeGlobalStyleVariations","variations","receiveThemeSupports","since","receiveThemeGlobalStyleRevisions","currentId","revisions","alternative","receiveEmbedPreview","url","preview","deleteEntityRecord","recordId","__unstableFetch","throwOnError","dispatch","configs","entityConfig","find","config","error","deletedRecord","lock","__unstableAcquireStoreLock","exclusive","hasError","path","baseURL","method","_error","__unstableReleaseStoreLock","editEntityRecord","options","select","getEntityConfig","Error","mergedEdits","getRawEntityRecord","editedRecord","getEditedEntityRecord","edit","Object","keys","reduce","acc","key","recordValue","editedRecordValue","value","undefined","window","__experimentalEnableSync","syncConfig","globalThis","IS_GUTENBERG_PLUGIN","objectId","getSyncObjectId","update","syncObjectType","undoIgnore","getUndoManager","addRecord","changes","from","to","isCached","undo","undoRecord","redo","redoRecord","__unstableCreateUndoLevel","saveEntityRecord","isAutosave","resolveSelect","entityIdKey","entries","evaluatedValue","updatedRecord","persistedRecord","getCurrentUser","currentUserId","autosavePost","getAutosave","data","includes","newRecord","receiveAutosaves","__unstablePrePersist","__experimentalBatch","requests","batch","api","add","saveEditedEntityRecord","resultPromises","request","results","Promise","all","run","hasEditsForEntityRecord","getEntityRecordNonTransientEdits","__experimentalSaveSpecifiedEntityEdits","itemsToSave","editsToSave","item","receiveUploadPermissions","hasUploadPermissions","receiveUserPermission","isAllowed","receiveUserPermissions","permissions","postId","autosaves","receiveNavigationFallbackId","fallbackId","receiveDefaultTemplateId","templateId","receiveRevisions","recordKey","revisionKey","items"],"sources":["@wordpress/core-data/src/actions.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport fastDeepEqual from 'fast-deep-equal/es6';\nimport { v4 as uuid } from 'uuid';\n\n/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport { addQueryArgs } from '@wordpress/url';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { getNestedValue, setNestedValue } from './utils';\nimport { receiveItems, removeItems, receiveQueriedItems } from './queried-data';\nimport { getOrLoadEntitiesConfig, DEFAULT_ENTITY_KEY } from './entities';\nimport { createBatch } from './batch';\nimport { STORE_NAME } from './name';\nimport { getSyncProvider } from './sync';\n\n/**\n * Returns an action object used in signalling that authors have been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {string}       queryID Query ID.\n * @param {Array|Object} users   Users received.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserQuery( queryID, users ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_QUERY',\n\t\tusers: Array.isArray( users ) ? users : [ users ],\n\t\tqueryID,\n\t};\n}\n\n/**\n * Returns an action used in signalling that the current user has been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {Object} currentUser Current user object.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentUser( currentUser ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_USER',\n\t\tcurrentUser,\n\t};\n}\n\n/**\n * Returns an action object used in adding new entities.\n *\n * @param {Array} entities Entities received.\n *\n * @return {Object} Action object.\n */\nexport function addEntities( entities ) {\n\treturn {\n\t\ttype: 'ADD_ENTITIES',\n\t\tentities,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that entity records have been received.\n *\n * @param {string}       kind            Kind of the received entity record.\n * @param {string}       name            Name of the received entity record.\n * @param {Array|Object} records         Records received.\n * @param {?Object}      query           Query Object.\n * @param {?boolean}     invalidateCache Should invalidate query caches.\n * @param {?Object}      edits           Edits to reset.\n * @param {?Object}      meta            Meta information about pagination.\n * @return {Object} Action object.\n */\nexport function receiveEntityRecords(\n\tkind,\n\tname,\n\trecords,\n\tquery,\n\tinvalidateCache = false,\n\tedits,\n\tmeta\n) {\n\t// Auto drafts should not have titles, but some plugins rely on them so we can't filter this\n\t// on the server.\n\tif ( kind === 'postType' ) {\n\t\trecords = ( Array.isArray( records ) ? records : [ records ] ).map(\n\t\t\t( record ) =>\n\t\t\t\trecord.status === 'auto-draft'\n\t\t\t\t\t? { ...record, title: '' }\n\t\t\t\t\t: record\n\t\t);\n\t}\n\tlet action;\n\tif ( query ) {\n\t\taction = receiveQueriedItems( records, query, edits, meta );\n\t} else {\n\t\taction = receiveItems( records, edits, meta );\n\t}\n\n\treturn {\n\t\t...action,\n\t\tkind,\n\t\tname,\n\t\tinvalidateCache,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current theme has been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {Object} currentTheme The current theme.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentTheme( currentTheme ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_THEME',\n\t\tcurrentTheme,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current global styles id has been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {string} currentGlobalStylesId The current global styles id.\n *\n * @return {Object} Action object.\n */\nexport function __experimentalReceiveCurrentGlobalStylesId(\n\tcurrentGlobalStylesId\n) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_GLOBAL_STYLES_ID',\n\t\tid: currentGlobalStylesId,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the theme base global styles have been received\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {string} stylesheet   The theme's identifier\n * @param {Object} globalStyles The global styles object.\n *\n * @return {Object} Action object.\n */\nexport function __experimentalReceiveThemeBaseGlobalStyles(\n\tstylesheet,\n\tglobalStyles\n) {\n\treturn {\n\t\ttype: 'RECEIVE_THEME_GLOBAL_STYLES',\n\t\tstylesheet,\n\t\tglobalStyles,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the theme global styles variations have been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {string} stylesheet The theme's identifier\n * @param {Array}  variations The global styles variations.\n *\n * @return {Object} Action object.\n */\nexport function __experimentalReceiveThemeGlobalStyleVariations(\n\tstylesheet,\n\tvariations\n) {\n\treturn {\n\t\ttype: 'RECEIVE_THEME_GLOBAL_STYLE_VARIATIONS',\n\t\tstylesheet,\n\t\tvariations,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the index has been received.\n *\n * @deprecated since WP 5.9, this is not useful anymore, use the selector directly.\n *\n * @return {Object} Action object.\n */\nexport function receiveThemeSupports() {\n\tdeprecated( \"wp.data.dispatch( 'core' ).receiveThemeSupports\", {\n\t\tsince: '5.9',\n\t} );\n\n\treturn {\n\t\ttype: 'DO_NOTHING',\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the theme global styles CPT post revisions have been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @deprecated since WordPress 6.5.0. Callers should use `dispatch( 'core' ).receiveRevision` instead.\n *\n * @ignore\n *\n * @param {number} currentId The post id.\n * @param {Array}  revisions The global styles revisions.\n *\n * @return {Object} Action object.\n */\nexport function receiveThemeGlobalStyleRevisions( currentId, revisions ) {\n\tdeprecated(\n\t\t\"wp.data.dispatch( 'core' ).receiveThemeGlobalStyleRevisions()\",\n\t\t{\n\t\t\tsince: '6.5.0',\n\t\t\talternative: \"wp.data.dispatch( 'core' ).receiveRevisions\",\n\t\t}\n\t);\n\treturn {\n\t\ttype: 'RECEIVE_THEME_GLOBAL_STYLE_REVISIONS',\n\t\tcurrentId,\n\t\trevisions,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the preview data for\n * a given URl has been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {string} url     URL to preview the embed for.\n * @param {*}      preview Preview data.\n *\n * @return {Object} Action object.\n */\nexport function receiveEmbedPreview( url, preview ) {\n\treturn {\n\t\ttype: 'RECEIVE_EMBED_PREVIEW',\n\t\turl,\n\t\tpreview,\n\t};\n}\n\n/**\n * Action triggered to delete an entity record.\n *\n * @param {string}        kind                         Kind of the deleted entity.\n * @param {string}        name                         Name of the deleted entity.\n * @param {number|string} recordId                     Record ID of the deleted entity.\n * @param {?Object}       query                        Special query parameters for the\n *                                                     DELETE API call.\n * @param {Object}        [options]                    Delete options.\n * @param {Function}      [options.__unstableFetch]    Internal use only. Function to\n *                                                     call instead of `apiFetch()`.\n *                                                     Must return a promise.\n * @param {boolean}       [options.throwOnError=false] If false, this action suppresses all\n *                                                     the exceptions. Defaults to false.\n */\nexport const deleteEntityRecord =\n\t(\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\tquery,\n\t\t{ __unstableFetch = apiFetch, throwOnError = false } = {}\n\t) =>\n\tasync ( { dispatch } ) => {\n\t\tconst configs = await dispatch( getOrLoadEntitiesConfig( kind, name ) );\n\t\tconst entityConfig = configs.find(\n\t\t\t( config ) => config.kind === kind && config.name === name\n\t\t);\n\t\tlet error;\n\t\tlet deletedRecord = false;\n\t\tif ( ! entityConfig ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst lock = await dispatch.__unstableAcquireStoreLock(\n\t\t\tSTORE_NAME,\n\t\t\t[ 'entities', 'records', kind, name, recordId ],\n\t\t\t{ exclusive: true }\n\t\t);\n\n\t\ttry {\n\t\t\tdispatch( {\n\t\t\t\ttype: 'DELETE_ENTITY_RECORD_START',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t} );\n\n\t\t\tlet hasError = false;\n\t\t\ttry {\n\t\t\t\tlet path = `${ entityConfig.baseURL }/${ recordId }`;\n\n\t\t\t\tif ( query ) {\n\t\t\t\t\tpath = addQueryArgs( path, query );\n\t\t\t\t}\n\n\t\t\t\tdeletedRecord = await __unstableFetch( {\n\t\t\t\t\tpath,\n\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t} );\n\n\t\t\t\tawait dispatch( removeItems( kind, name, recordId, true ) );\n\t\t\t} catch ( _error ) {\n\t\t\t\thasError = true;\n\t\t\t\terror = _error;\n\t\t\t}\n\n\t\t\tdispatch( {\n\t\t\t\ttype: 'DELETE_ENTITY_RECORD_FINISH',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t\terror,\n\t\t\t} );\n\n\t\t\tif ( hasError && throwOnError ) {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\treturn deletedRecord;\n\t\t} finally {\n\t\t\tdispatch.__unstableReleaseStoreLock( lock );\n\t\t}\n\t};\n\n/**\n * Returns an action object that triggers an\n * edit to an entity record.\n *\n * @param {string}        kind                 Kind of the edited entity record.\n * @param {string}        name                 Name of the edited entity record.\n * @param {number|string} recordId             Record ID of the edited entity record.\n * @param {Object}        edits                The edits.\n * @param {Object}        options              Options for the edit.\n * @param {boolean}       [options.undoIgnore] Whether to ignore the edit in undo history or not.\n *\n * @return {Object} Action object.\n */\nexport const editEntityRecord =\n\t( kind, name, recordId, edits, options = {} ) =>\n\t( { select, dispatch } ) => {\n\t\tconst entityConfig = select.getEntityConfig( kind, name );\n\t\tif ( ! entityConfig ) {\n\t\t\tthrow new Error(\n\t\t\t\t`The entity being edited (${ kind }, ${ name }) does not have a loaded config.`\n\t\t\t);\n\t\t}\n\t\tconst { mergedEdits = {} } = entityConfig;\n\t\tconst record = select.getRawEntityRecord( kind, name, recordId );\n\t\tconst editedRecord = select.getEditedEntityRecord(\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId\n\t\t);\n\n\t\tconst edit = {\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId,\n\t\t\t// Clear edits when they are equal to their persisted counterparts\n\t\t\t// so that the property is not considered dirty.\n\t\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\t\tconst recordValue = record[ key ];\n\t\t\t\tconst editedRecordValue = editedRecord[ key ];\n\t\t\t\tconst value = mergedEdits[ key ]\n\t\t\t\t\t? { ...editedRecordValue, ...edits[ key ] }\n\t\t\t\t\t: edits[ key ];\n\t\t\t\tacc[ key ] = fastDeepEqual( recordValue, value )\n\t\t\t\t\t? undefined\n\t\t\t\t\t: value;\n\t\t\t\treturn acc;\n\t\t\t}, {} ),\n\t\t};\n\t\tif ( window.__experimentalEnableSync && entityConfig.syncConfig ) {\n\t\t\tif ( globalThis.IS_GUTENBERG_PLUGIN ) {\n\t\t\t\tconst objectId = entityConfig.getSyncObjectId( recordId );\n\t\t\t\tgetSyncProvider().update(\n\t\t\t\t\tentityConfig.syncObjectType + '--edit',\n\t\t\t\t\tobjectId,\n\t\t\t\t\tedit.edits\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tif ( ! options.undoIgnore ) {\n\t\t\t\tselect.getUndoManager().addRecord(\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: { kind, name, recordId },\n\t\t\t\t\t\t\tchanges: Object.keys( edits ).reduce(\n\t\t\t\t\t\t\t\t( acc, key ) => {\n\t\t\t\t\t\t\t\t\tacc[ key ] = {\n\t\t\t\t\t\t\t\t\t\tfrom: editedRecord[ key ],\n\t\t\t\t\t\t\t\t\t\tto: edits[ key ],\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\toptions.isCached\n\t\t\t\t);\n\t\t\t}\n\t\t\tdispatch( {\n\t\t\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t\t\t...edit,\n\t\t\t} );\n\t\t}\n\t};\n\n/**\n * Action triggered to undo the last edit to\n * an entity record, if any.\n */\nexport const undo =\n\t() =>\n\t( { select, dispatch } ) => {\n\t\tconst undoRecord = select.getUndoManager().undo();\n\t\tif ( ! undoRecord ) {\n\t\t\treturn;\n\t\t}\n\t\tdispatch( {\n\t\t\ttype: 'UNDO',\n\t\t\trecord: undoRecord,\n\t\t} );\n\t};\n\n/**\n * Action triggered to redo the last undoed\n * edit to an entity record, if any.\n */\nexport const redo =\n\t() =>\n\t( { select, dispatch } ) => {\n\t\tconst redoRecord = select.getUndoManager().redo();\n\t\tif ( ! redoRecord ) {\n\t\t\treturn;\n\t\t}\n\t\tdispatch( {\n\t\t\ttype: 'REDO',\n\t\t\trecord: redoRecord,\n\t\t} );\n\t};\n\n/**\n * Forces the creation of a new undo level.\n *\n * @return {Object} Action object.\n */\nexport const __unstableCreateUndoLevel =\n\t() =>\n\t( { select } ) => {\n\t\tselect.getUndoManager().addRecord();\n\t};\n\n/**\n * Action triggered to save an entity record.\n *\n * @param {string}   kind                         Kind of the received entity.\n * @param {string}   name                         Name of the received entity.\n * @param {Object}   record                       Record to be saved.\n * @param {Object}   options                      Saving options.\n * @param {boolean}  [options.isAutosave=false]   Whether this is an autosave.\n * @param {Function} [options.__unstableFetch]    Internal use only. Function to\n *                                                call instead of `apiFetch()`.\n *                                                Must return a promise.\n * @param {boolean}  [options.throwOnError=false] If false, this action suppresses all\n *                                                the exceptions. Defaults to false.\n */\nexport const saveEntityRecord =\n\t(\n\t\tkind,\n\t\tname,\n\t\trecord,\n\t\t{\n\t\t\tisAutosave = false,\n\t\t\t__unstableFetch = apiFetch,\n\t\t\tthrowOnError = false,\n\t\t} = {}\n\t) =>\n\tasync ( { select, resolveSelect, dispatch } ) => {\n\t\tconst configs = await dispatch( getOrLoadEntitiesConfig( kind, name ) );\n\t\tconst entityConfig = configs.find(\n\t\t\t( config ) => config.kind === kind && config.name === name\n\t\t);\n\t\tif ( ! entityConfig ) {\n\t\t\treturn;\n\t\t}\n\t\tconst entityIdKey = entityConfig.key || DEFAULT_ENTITY_KEY;\n\t\tconst recordId = record[ entityIdKey ];\n\n\t\tconst lock = await dispatch.__unstableAcquireStoreLock(\n\t\t\tSTORE_NAME,\n\t\t\t[ 'entities', 'records', kind, name, recordId || uuid() ],\n\t\t\t{ exclusive: true }\n\t\t);\n\n\t\ttry {\n\t\t\t// Evaluate optimized edits.\n\t\t\t// (Function edits that should be evaluated on save to avoid expensive computations on every edit.)\n\t\t\tfor ( const [ key, value ] of Object.entries( record ) ) {\n\t\t\t\tif ( typeof value === 'function' ) {\n\t\t\t\t\tconst evaluatedValue = value(\n\t\t\t\t\t\tselect.getEditedEntityRecord( kind, name, recordId )\n\t\t\t\t\t);\n\t\t\t\t\tdispatch.editEntityRecord(\n\t\t\t\t\t\tkind,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\trecordId,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t[ key ]: evaluatedValue,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ undoIgnore: true }\n\t\t\t\t\t);\n\t\t\t\t\trecord[ key ] = evaluatedValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdispatch( {\n\t\t\t\ttype: 'SAVE_ENTITY_RECORD_START',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t\tisAutosave,\n\t\t\t} );\n\t\t\tlet updatedRecord;\n\t\t\tlet error;\n\t\t\tlet hasError = false;\n\t\t\ttry {\n\t\t\t\tconst path = `${ entityConfig.baseURL }${\n\t\t\t\t\trecordId ? '/' + recordId : ''\n\t\t\t\t}`;\n\t\t\t\tconst persistedRecord = select.getRawEntityRecord(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\trecordId\n\t\t\t\t);\n\n\t\t\t\tif ( isAutosave ) {\n\t\t\t\t\t// Most of this autosave logic is very specific to posts.\n\t\t\t\t\t// This is fine for now as it is the only supported autosave,\n\t\t\t\t\t// but ideally this should all be handled in the back end,\n\t\t\t\t\t// so the client just sends and receives objects.\n\t\t\t\t\tconst currentUser = select.getCurrentUser();\n\t\t\t\t\tconst currentUserId = currentUser\n\t\t\t\t\t\t? currentUser.id\n\t\t\t\t\t\t: undefined;\n\t\t\t\t\tconst autosavePost = await resolveSelect.getAutosave(\n\t\t\t\t\t\tpersistedRecord.type,\n\t\t\t\t\t\tpersistedRecord.id,\n\t\t\t\t\t\tcurrentUserId\n\t\t\t\t\t);\n\t\t\t\t\t// Autosaves need all expected fields to be present.\n\t\t\t\t\t// So we fallback to the previous autosave and then\n\t\t\t\t\t// to the actual persisted entity if the edits don't\n\t\t\t\t\t// have a value.\n\t\t\t\t\tlet data = {\n\t\t\t\t\t\t...persistedRecord,\n\t\t\t\t\t\t...autosavePost,\n\t\t\t\t\t\t...record,\n\t\t\t\t\t};\n\t\t\t\t\tdata = Object.keys( data ).reduce(\n\t\t\t\t\t\t( acc, key ) => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t'title',\n\t\t\t\t\t\t\t\t\t'excerpt',\n\t\t\t\t\t\t\t\t\t'content',\n\t\t\t\t\t\t\t\t\t'meta',\n\t\t\t\t\t\t\t\t].includes( key )\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tacc[ key ] = data[ key ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Do not update the `status` if we have edited it when auto saving.\n\t\t\t\t\t\t\t// It's very important to let the user explicitly save this change,\n\t\t\t\t\t\t\t// because it can lead to unexpected results. An example would be to\n\t\t\t\t\t\t\t// have a draft post and change the status to publish.\n\t\t\t\t\t\t\tstatus:\n\t\t\t\t\t\t\t\tdata.status === 'auto-draft'\n\t\t\t\t\t\t\t\t\t? 'draft'\n\t\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tupdatedRecord = await __unstableFetch( {\n\t\t\t\t\t\tpath: `${ path }/autosaves`,\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\tdata,\n\t\t\t\t\t} );\n\n\t\t\t\t\t// An autosave may be processed by the server as a regular save\n\t\t\t\t\t// when its update is requested by the author and the post had\n\t\t\t\t\t// draft or auto-draft status.\n\t\t\t\t\tif ( persistedRecord.id === updatedRecord.id ) {\n\t\t\t\t\t\tlet newRecord = {\n\t\t\t\t\t\t\t...persistedRecord,\n\t\t\t\t\t\t\t...data,\n\t\t\t\t\t\t\t...updatedRecord,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tnewRecord = Object.keys( newRecord ).reduce(\n\t\t\t\t\t\t\t( acc, key ) => {\n\t\t\t\t\t\t\t\t// These properties are persisted in autosaves.\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t[ 'title', 'excerpt', 'content' ].includes(\n\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tacc[ key ] = newRecord[ key ];\n\t\t\t\t\t\t\t\t} else if ( key === 'status' ) {\n\t\t\t\t\t\t\t\t\t// Status is only persisted in autosaves when going from\n\t\t\t\t\t\t\t\t\t// \"auto-draft\" to \"draft\".\n\t\t\t\t\t\t\t\t\tacc[ key ] =\n\t\t\t\t\t\t\t\t\t\tpersistedRecord.status ===\n\t\t\t\t\t\t\t\t\t\t\t'auto-draft' &&\n\t\t\t\t\t\t\t\t\t\tnewRecord.status === 'draft'\n\t\t\t\t\t\t\t\t\t\t\t? newRecord.status\n\t\t\t\t\t\t\t\t\t\t\t: persistedRecord.status;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// These properties are not persisted in autosaves.\n\t\t\t\t\t\t\t\t\tacc[ key ] = persistedRecord[ key ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdispatch.receiveEntityRecords(\n\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tnewRecord,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatch.receiveAutosaves(\n\t\t\t\t\t\t\tpersistedRecord.id,\n\t\t\t\t\t\t\tupdatedRecord\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet edits = record;\n\t\t\t\t\tif ( entityConfig.__unstablePrePersist ) {\n\t\t\t\t\t\tedits = {\n\t\t\t\t\t\t\t...edits,\n\t\t\t\t\t\t\t...entityConfig.__unstablePrePersist(\n\t\t\t\t\t\t\t\tpersistedRecord,\n\t\t\t\t\t\t\t\tedits\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tupdatedRecord = await __unstableFetch( {\n\t\t\t\t\t\tpath,\n\t\t\t\t\t\tmethod: recordId ? 'PUT' : 'POST',\n\t\t\t\t\t\tdata: edits,\n\t\t\t\t\t} );\n\t\t\t\t\tdispatch.receiveEntityRecords(\n\t\t\t\t\t\tkind,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tupdatedRecord,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tedits\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch ( _error ) {\n\t\t\t\thasError = true;\n\t\t\t\terror = _error;\n\t\t\t}\n\t\t\tdispatch( {\n\t\t\t\ttype: 'SAVE_ENTITY_RECORD_FINISH',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t\terror,\n\t\t\t\tisAutosave,\n\t\t\t} );\n\n\t\t\tif ( hasError && throwOnError ) {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\treturn updatedRecord;\n\t\t} finally {\n\t\t\tdispatch.__unstableReleaseStoreLock( lock );\n\t\t}\n\t};\n\n/**\n * Runs multiple core-data actions at the same time using one API request.\n *\n * Example:\n *\n * ```\n * const [ savedRecord, updatedRecord, deletedRecord ] =\n *   await dispatch( 'core' ).__experimentalBatch( [\n *     ( { saveEntityRecord } ) => saveEntityRecord( 'root', 'widget', widget ),\n *     ( { saveEditedEntityRecord } ) => saveEntityRecord( 'root', 'widget', 123 ),\n *     ( { deleteEntityRecord } ) => deleteEntityRecord( 'root', 'widget', 123, null ),\n *   ] );\n * ```\n *\n * @param {Array} requests Array of functions which are invoked simultaneously.\n *                         Each function is passed an object containing\n *                         `saveEntityRecord`, `saveEditedEntityRecord`, and\n *                         `deleteEntityRecord`.\n *\n * @return {(thunkArgs: Object) => Promise} A promise that resolves to an array containing the return\n *                                          values of each function given in `requests`.\n */\nexport const __experimentalBatch =\n\t( requests ) =>\n\tasync ( { dispatch } ) => {\n\t\tconst batch = createBatch();\n\t\tconst api = {\n\t\t\tsaveEntityRecord( kind, name, record, options ) {\n\t\t\t\treturn batch.add( ( add ) =>\n\t\t\t\t\tdispatch.saveEntityRecord( kind, name, record, {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t__unstableFetch: add,\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t},\n\t\t\tsaveEditedEntityRecord( kind, name, recordId, options ) {\n\t\t\t\treturn batch.add( ( add ) =>\n\t\t\t\t\tdispatch.saveEditedEntityRecord( kind, name, recordId, {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t__unstableFetch: add,\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t},\n\t\t\tdeleteEntityRecord( kind, name, recordId, query, options ) {\n\t\t\t\treturn batch.add( ( add ) =>\n\t\t\t\t\tdispatch.deleteEntityRecord( kind, name, recordId, query, {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t__unstableFetch: add,\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t},\n\t\t};\n\t\tconst resultPromises = requests.map( ( request ) => request( api ) );\n\t\tconst [ , ...results ] = await Promise.all( [\n\t\t\tbatch.run(),\n\t\t\t...resultPromises,\n\t\t] );\n\t\treturn results;\n\t};\n\n/**\n * Action triggered to save an entity record's edits.\n *\n * @param {string}  kind     Kind of the entity.\n * @param {string}  name     Name of the entity.\n * @param {Object}  recordId ID of the record.\n * @param {Object=} options  Saving options.\n */\nexport const saveEditedEntityRecord =\n\t( kind, name, recordId, options ) =>\n\tasync ( { select, dispatch } ) => {\n\t\tif ( ! select.hasEditsForEntityRecord( kind, name, recordId ) ) {\n\t\t\treturn;\n\t\t}\n\t\tconst configs = await dispatch( getOrLoadEntitiesConfig( kind, name ) );\n\t\tconst entityConfig = configs.find(\n\t\t\t( config ) => config.kind === kind && config.name === name\n\t\t);\n\t\tif ( ! entityConfig ) {\n\t\t\treturn;\n\t\t}\n\t\tconst entityIdKey = entityConfig.key || DEFAULT_ENTITY_KEY;\n\n\t\tconst edits = select.getEntityRecordNonTransientEdits(\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId\n\t\t);\n\t\tconst record = { [ entityIdKey ]: recordId, ...edits };\n\t\treturn await dispatch.saveEntityRecord( kind, name, record, options );\n\t};\n\n/**\n * Action triggered to save only specified properties for the entity.\n *\n * @param {string}        kind        Kind of the entity.\n * @param {string}        name        Name of the entity.\n * @param {number|string} recordId    ID of the record.\n * @param {Array}         itemsToSave List of entity properties or property paths to save.\n * @param {Object}        options     Saving options.\n */\nexport const __experimentalSaveSpecifiedEntityEdits =\n\t( kind, name, recordId, itemsToSave, options ) =>\n\tasync ( { select, dispatch } ) => {\n\t\tif ( ! select.hasEditsForEntityRecord( kind, name, recordId ) ) {\n\t\t\treturn;\n\t\t}\n\t\tconst edits = select.getEntityRecordNonTransientEdits(\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId\n\t\t);\n\t\tconst editsToSave = {};\n\n\t\tfor ( const item of itemsToSave ) {\n\t\t\tsetNestedValue( editsToSave, item, getNestedValue( edits, item ) );\n\t\t}\n\n\t\tconst configs = await dispatch( getOrLoadEntitiesConfig( kind, name ) );\n\t\tconst entityConfig = configs.find(\n\t\t\t( config ) => config.kind === kind && config.name === name\n\t\t);\n\n\t\tconst entityIdKey = entityConfig?.key || DEFAULT_ENTITY_KEY;\n\n\t\t// If a record key is provided then update the existing record.\n\t\t// This necessitates providing `recordKey` to saveEntityRecord as part of the\n\t\t// `record` argument (here called `editsToSave`) to stop that action creating\n\t\t// a new record and instead cause it to update the existing record.\n\t\tif ( recordId ) {\n\t\t\teditsToSave[ entityIdKey ] = recordId;\n\t\t}\n\t\treturn await dispatch.saveEntityRecord(\n\t\t\tkind,\n\t\t\tname,\n\t\t\teditsToSave,\n\t\t\toptions\n\t\t);\n\t};\n\n/**\n * Returns an action object used in signalling that Upload permissions have been received.\n *\n * @deprecated since WP 5.9, use receiveUserPermission instead.\n *\n * @param {boolean} hasUploadPermissions Does the user have permission to upload files?\n *\n * @return {Object} Action object.\n */\nexport function receiveUploadPermissions( hasUploadPermissions ) {\n\tdeprecated( \"wp.data.dispatch( 'core' ).receiveUploadPermissions\", {\n\t\tsince: '5.9',\n\t\talternative: 'receiveUserPermission',\n\t} );\n\n\treturn receiveUserPermission( 'create/media', hasUploadPermissions );\n}\n\n/**\n * Returns an action object used in signalling that the current user has\n * permission to perform an action on a REST resource.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {string}  key       A key that represents the action and REST resource.\n * @param {boolean} isAllowed Whether or not the user can perform the action.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserPermission( key, isAllowed ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_PERMISSION',\n\t\tkey,\n\t\tisAllowed,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current user has\n * permission to perform an action on a REST resource. Ignored from\n * documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {Object<string, boolean>} permissions An object where keys represent\n *                                              actions and REST resources, and\n *                                              values indicate whether the user\n *                                              is allowed to perform the\n *                                              action.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserPermissions( permissions ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_PERMISSIONS',\n\t\tpermissions,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the autosaves for a\n * post have been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {number}       postId    The id of the post that is parent to the autosave.\n * @param {Array|Object} autosaves An array of autosaves or singular autosave object.\n *\n * @return {Object} Action object.\n */\nexport function receiveAutosaves( postId, autosaves ) {\n\treturn {\n\t\ttype: 'RECEIVE_AUTOSAVES',\n\t\tpostId,\n\t\tautosaves: Array.isArray( autosaves ) ? autosaves : [ autosaves ],\n\t};\n}\n\n/**\n * Returns an action object signalling that the fallback Navigation\n * Menu id has been received.\n *\n * @param {integer} fallbackId the id of the fallback Navigation Menu\n * @return {Object} Action object.\n */\nexport function receiveNavigationFallbackId( fallbackId ) {\n\treturn {\n\t\ttype: 'RECEIVE_NAVIGATION_FALLBACK_ID',\n\t\tfallbackId,\n\t};\n}\n\n/**\n * Returns an action object used to set the template for a given query.\n *\n * @param {Object} query      The lookup query.\n * @param {string} templateId The resolved template id.\n *\n * @return {Object} Action object.\n */\nexport function receiveDefaultTemplateId( query, templateId ) {\n\treturn {\n\t\ttype: 'RECEIVE_DEFAULT_TEMPLATE',\n\t\tquery,\n\t\ttemplateId,\n\t};\n}\n\n/**\n * Action triggered to receive revision items.\n *\n * @param {string}        kind            Kind of the received entity record revisions.\n * @param {string}        name            Name of the received entity record revisions.\n * @param {number|string} recordKey       The key of the entity record whose revisions you want to fetch.\n * @param {Array|Object}  records         Revisions received.\n * @param {?Object}       query           Query Object.\n * @param {?boolean}      invalidateCache Should invalidate query caches.\n * @param {?Object}       meta            Meta information about pagination.\n */\nexport const receiveRevisions =\n\t( kind, name, recordKey, records, query, invalidateCache = false, meta ) =>\n\tasync ( { dispatch } ) => {\n\t\tconst configs = await dispatch( getOrLoadEntitiesConfig( kind, name ) );\n\t\tconst entityConfig = configs.find(\n\t\t\t( config ) => config.kind === kind && config.name === name\n\t\t);\n\t\tconst key =\n\t\t\tentityConfig && entityConfig?.revisionKey\n\t\t\t\t? entityConfig.revisionKey\n\t\t\t\t: DEFAULT_ENTITY_KEY;\n\n\t\tdispatch( {\n\t\t\ttype: 'RECEIVE_ITEM_REVISIONS',\n\t\t\tkey,\n\t\t\titems: Array.isArray( records ) ? records : [ records ],\n\t\t\trecordKey,\n\t\t\tmeta,\n\t\t\tquery,\n\t\t\tkind,\n\t\t\tname,\n\t\t\tinvalidateCache,\n\t\t} );\n\t};\n"],"mappings":"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","ignoreList":[]}