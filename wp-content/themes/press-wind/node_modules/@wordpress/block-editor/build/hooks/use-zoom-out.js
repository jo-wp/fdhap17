"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useZoomOut = useZoomOut;
var _data = require("@wordpress/data");
var _element = require("@wordpress/element");
var _store = require("../store");
var _lockUnlock = require("../lock-unlock");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

/**
 * A hook used to set the editor mode to zoomed out mode, invoking the hook sets the mode.
 *
 * @param {boolean} zoomOut If we should enter into zoomOut mode or not
 */
function useZoomOut(zoomOut = true) {
  const {
    __unstableSetEditorMode,
    setZoomLevel
  } = (0, _lockUnlock.unlock)((0, _data.useDispatch)(_store.store));
  const {
    __unstableGetEditorMode
  } = (0, _lockUnlock.unlock)((0, _data.useSelect)(_store.store));
  const originalEditingModeRef = (0, _element.useRef)(null);
  const mode = __unstableGetEditorMode();
  (0, _element.useEffect)(() => {
    // Only set this on mount so we know what to return to when we unmount.
    if (!originalEditingModeRef.current) {
      originalEditingModeRef.current = mode;
    }
    return () => {
      // We need to use  __unstableGetEditorMode() here and not `mode`, as mode may not update on unmount
      if (__unstableGetEditorMode() === 'zoom-out' && __unstableGetEditorMode() !== originalEditingModeRef.current) {
        __unstableSetEditorMode(originalEditingModeRef.current);
        setZoomLevel(100);
      }
    };
  }, []);

  // The effect opens the zoom-out view if we want it open and it's not currently in zoom-out mode.
  (0, _element.useEffect)(() => {
    if (zoomOut && mode !== 'zoom-out') {
      __unstableSetEditorMode('zoom-out');
      setZoomLevel(50);
    } else if (!zoomOut && __unstableGetEditorMode() === 'zoom-out' && originalEditingModeRef.current !== mode) {
      __unstableSetEditorMode(originalEditingModeRef.current);
      setZoomLevel(100);
    }
  }, [__unstableGetEditorMode, __unstableSetEditorMode, zoomOut, setZoomLevel]); // Mode is deliberately excluded from the dependencies so that the effect does not run when mode changes.
}
//# sourceMappingURL=use-zoom-out.js.map