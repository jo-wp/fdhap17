{"version":3,"names":["_i18n","require","_blockEditor","_components","_compose","_primitives","_lockUnlock","_constants","_jsxRuntime","useSpacingSizes","unlock","blockEditorPrivateApis","DimensionInput","label","onChange","isResizing","value","inputId","useInstanceId","UnitControl","spacingSizes","spacingUnits","useSettings","availableUnits","filter","unit","units","useCustomUnits","defaultValues","px","em","rem","vw","vh","handleOnChange","unprocessedValue","all","parsedQuantity","parsedUnit","parseQuantityAndUnitFromRawValue","computedValue","isValueSpacingPreset","join","jsxs","Fragment","children","length","jsx","__experimentalUnitControl","id","isResetValueOnUnitChange","min","MIN_SPACER_SIZE","__next40pxDefaultSize","View","className","__experimentalSpacingSizesControl","values","sides","allowReset","splitOnAxis","showSideInLabel","SpacerControls","setAttributes","orientation","height","width","InspectorControls","PanelBody","title","__","nextWidth","nextHeight"],"sources":["@wordpress/block-library/src/spacer/controls.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tInspectorControls,\n\tuseSettings,\n\t__experimentalSpacingSizesControl as SpacingSizesControl,\n\tisValueSpacingPreset,\n\tprivateApis as blockEditorPrivateApis,\n} from '@wordpress/block-editor';\nimport {\n\tPanelBody,\n\t__experimentalUseCustomUnits as useCustomUnits,\n\t__experimentalUnitControl as UnitControl,\n\t__experimentalParseQuantityAndUnitFromRawValue as parseQuantityAndUnitFromRawValue,\n} from '@wordpress/components';\nimport { useInstanceId } from '@wordpress/compose';\nimport { View } from '@wordpress/primitives';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../lock-unlock';\nimport { MIN_SPACER_SIZE } from './constants';\n\nconst { useSpacingSizes } = unlock( blockEditorPrivateApis );\n\nfunction DimensionInput( { label, onChange, isResizing, value = '' } ) {\n\tconst inputId = useInstanceId( UnitControl, 'block-spacer-height-input' );\n\tconst spacingSizes = useSpacingSizes();\n\tconst [ spacingUnits ] = useSettings( 'spacing.units' );\n\t// In most contexts the spacer size cannot meaningfully be set to a\n\t// percentage, since this is relative to the parent container. This\n\t// unit is disabled from the UI.\n\tconst availableUnits = spacingUnits\n\t\t? spacingUnits.filter( ( unit ) => unit !== '%' )\n\t\t: [ 'px', 'em', 'rem', 'vw', 'vh' ];\n\n\tconst units = useCustomUnits( {\n\t\tavailableUnits,\n\t\tdefaultValues: { px: 100, em: 10, rem: 10, vw: 10, vh: 25 },\n\t} );\n\n\tconst handleOnChange = ( unprocessedValue ) => {\n\t\tonChange( unprocessedValue.all );\n\t};\n\n\t// Force the unit to update to `px` when the Spacer is being resized.\n\tconst [ parsedQuantity, parsedUnit ] =\n\t\tparseQuantityAndUnitFromRawValue( value );\n\tconst computedValue = isValueSpacingPreset( value )\n\t\t? value\n\t\t: [ parsedQuantity, isResizing ? 'px' : parsedUnit ].join( '' );\n\n\treturn (\n\t\t<>\n\t\t\t{ ( ! spacingSizes || spacingSizes?.length === 0 ) && (\n\t\t\t\t<UnitControl\n\t\t\t\t\tid={ inputId }\n\t\t\t\t\tisResetValueOnUnitChange\n\t\t\t\t\tmin={ MIN_SPACER_SIZE }\n\t\t\t\t\tonChange={ handleOnChange }\n\t\t\t\t\tvalue={ computedValue }\n\t\t\t\t\tunits={ units }\n\t\t\t\t\tlabel={ label }\n\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t{ spacingSizes?.length > 0 && (\n\t\t\t\t<View className=\"tools-panel-item-spacing\">\n\t\t\t\t\t<SpacingSizesControl\n\t\t\t\t\t\tvalues={ { all: computedValue } }\n\t\t\t\t\t\tonChange={ handleOnChange }\n\t\t\t\t\t\tlabel={ label }\n\t\t\t\t\t\tsides={ [ 'all' ] }\n\t\t\t\t\t\tunits={ units }\n\t\t\t\t\t\tallowReset={ false }\n\t\t\t\t\t\tsplitOnAxis={ false }\n\t\t\t\t\t\tshowSideInLabel={ false }\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nexport default function SpacerControls( {\n\tsetAttributes,\n\torientation,\n\theight,\n\twidth,\n\tisResizing,\n} ) {\n\treturn (\n\t\t<InspectorControls>\n\t\t\t<PanelBody title={ __( 'Settings' ) }>\n\t\t\t\t{ orientation === 'horizontal' && (\n\t\t\t\t\t<DimensionInput\n\t\t\t\t\t\tlabel={ __( 'Width' ) }\n\t\t\t\t\t\tvalue={ width }\n\t\t\t\t\t\tonChange={ ( nextWidth ) =>\n\t\t\t\t\t\t\tsetAttributes( { width: nextWidth } )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tisResizing={ isResizing }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ orientation !== 'horizontal' && (\n\t\t\t\t\t<DimensionInput\n\t\t\t\t\t\tlabel={ __( 'Height' ) }\n\t\t\t\t\t\tvalue={ height }\n\t\t\t\t\t\tonChange={ ( nextHeight ) =>\n\t\t\t\t\t\t\tsetAttributes( { height: nextHeight } )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tisResizing={ isResizing }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</PanelBody>\n\t\t</InspectorControls>\n\t);\n}\n"],"mappings":"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","ignoreList":[]}