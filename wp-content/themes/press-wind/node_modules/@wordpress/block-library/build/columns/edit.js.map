{"version":3,"names":["_clsx","_interopRequireDefault","require","_i18n","_components","_blockEditor","_data","_blocks","_utils","_jsxRuntime","DEFAULT_BLOCK","name","ColumnInspectorControls","clientId","setAttributes","isStackedOnMobile","count","canInsertColumnBlock","minCount","useSelect","select","canInsertBlockType","canRemoveBlock","getBlocks","getBlockCount","blockEditorStore","innerBlocks","preventRemovalBlockIndexes","reduce","acc","block","index","push","Math","max","replaceInnerBlocks","useDispatch","updateColumns","previousColumns","newColumns","hasExplicitWidths","hasExplicitPercentColumnWidths","isAddingColumn","newColumnWidth","toWidthPrecision","newlyAddedColumns","widths","getRedistributedColumnWidths","getMappedColumnWidths","Array","from","length","map","createBlock","width","slice","jsxs","PanelBody","title","__","children","Fragment","jsx","RangeControl","__nextHasNoMarginBottom","__next40pxDefaultSize","label","value","onChange","min","Notice","status","isDismissible","ToggleControl","checked","ColumnsEditContainer","attributes","verticalAlignment","templateLock","registry","useRegistry","getBlockOrder","updateBlockAttributes","classes","clsx","blockProps","useBlockProps","className","innerBlocksProps","useInnerBlocksProps","defaultBlock","directInsert","orientation","renderAppender","updateAlignment","newVerticalAlignment","innerBlockClientIds","batch","BlockControls","BlockVerticalAlignmentToolbar","InspectorControls","Placeholder","blockType","defaultVariation","variations","getBlockVariations","getBlockType","getDefaultBlockVariation","blocksStore","__experimentalBlockVariationPicker","icon","src","instructions","onSelect","nextVariation","createBlocksFromInnerBlocksTemplate","allowSkip","ColumnsEdit","props","hasInnerBlocks","Component","_default","exports","default"],"sources":["@wordpress/block-library/src/columns/edit.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tNotice,\n\tPanelBody,\n\tRangeControl,\n\tToggleControl,\n} from '@wordpress/components';\n\nimport {\n\tInspectorControls,\n\tuseInnerBlocksProps,\n\tBlockControls,\n\tBlockVerticalAlignmentToolbar,\n\t__experimentalBlockVariationPicker,\n\tuseBlockProps,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { useDispatch, useSelect, useRegistry } from '@wordpress/data';\nimport {\n\tcreateBlock,\n\tcreateBlocksFromInnerBlocksTemplate,\n\tstore as blocksStore,\n} from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport {\n\thasExplicitPercentColumnWidths,\n\tgetMappedColumnWidths,\n\tgetRedistributedColumnWidths,\n\ttoWidthPrecision,\n} from './utils';\n\nconst DEFAULT_BLOCK = {\n\tname: 'core/column',\n};\n\nfunction ColumnInspectorControls( {\n\tclientId,\n\tsetAttributes,\n\tisStackedOnMobile,\n} ) {\n\tconst { count, canInsertColumnBlock, minCount } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tcanInsertBlockType,\n\t\t\t\tcanRemoveBlock,\n\t\t\t\tgetBlocks,\n\t\t\t\tgetBlockCount,\n\t\t\t} = select( blockEditorStore );\n\t\t\tconst innerBlocks = getBlocks( clientId );\n\n\t\t\t// Get the indexes of columns for which removal is prevented.\n\t\t\t// The highest index will be used to determine the minimum column count.\n\t\t\tconst preventRemovalBlockIndexes = innerBlocks.reduce(\n\t\t\t\t( acc, block, index ) => {\n\t\t\t\t\tif ( ! canRemoveBlock( block.clientId ) ) {\n\t\t\t\t\t\tacc.push( index );\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t[]\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\tcount: getBlockCount( clientId ),\n\t\t\t\tcanInsertColumnBlock: canInsertBlockType(\n\t\t\t\t\t'core/column',\n\t\t\t\t\tclientId\n\t\t\t\t),\n\t\t\t\tminCount: Math.max( ...preventRemovalBlockIndexes ) + 1,\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\tconst { getBlocks } = useSelect( blockEditorStore );\n\tconst { replaceInnerBlocks } = useDispatch( blockEditorStore );\n\n\t/**\n\t * Updates the column count, including necessary revisions to child Column\n\t * blocks to grant required or redistribute available space.\n\t *\n\t * @param {number} previousColumns Previous column count.\n\t * @param {number} newColumns      New column count.\n\t */\n\tfunction updateColumns( previousColumns, newColumns ) {\n\t\tlet innerBlocks = getBlocks( clientId );\n\t\tconst hasExplicitWidths = hasExplicitPercentColumnWidths( innerBlocks );\n\n\t\t// Redistribute available width for existing inner blocks.\n\t\tconst isAddingColumn = newColumns > previousColumns;\n\n\t\tif ( isAddingColumn && hasExplicitWidths ) {\n\t\t\t// If adding a new column, assign width to the new column equal to\n\t\t\t// as if it were `1 / columns` of the total available space.\n\t\t\tconst newColumnWidth = toWidthPrecision( 100 / newColumns );\n\t\t\tconst newlyAddedColumns = newColumns - previousColumns;\n\n\t\t\t// Redistribute in consideration of pending block insertion as\n\t\t\t// constraining the available working width.\n\t\t\tconst widths = getRedistributedColumnWidths(\n\t\t\t\tinnerBlocks,\n\t\t\t\t100 - newColumnWidth * newlyAddedColumns\n\t\t\t);\n\n\t\t\tinnerBlocks = [\n\t\t\t\t...getMappedColumnWidths( innerBlocks, widths ),\n\t\t\t\t...Array.from( {\n\t\t\t\t\tlength: newlyAddedColumns,\n\t\t\t\t} ).map( () => {\n\t\t\t\t\treturn createBlock( 'core/column', {\n\t\t\t\t\t\twidth: `${ newColumnWidth }%`,\n\t\t\t\t\t} );\n\t\t\t\t} ),\n\t\t\t];\n\t\t} else if ( isAddingColumn ) {\n\t\t\tinnerBlocks = [\n\t\t\t\t...innerBlocks,\n\t\t\t\t...Array.from( {\n\t\t\t\t\tlength: newColumns - previousColumns,\n\t\t\t\t} ).map( () => {\n\t\t\t\t\treturn createBlock( 'core/column' );\n\t\t\t\t} ),\n\t\t\t];\n\t\t} else if ( newColumns < previousColumns ) {\n\t\t\t// The removed column will be the last of the inner blocks.\n\t\t\tinnerBlocks = innerBlocks.slice(\n\t\t\t\t0,\n\t\t\t\t-( previousColumns - newColumns )\n\t\t\t);\n\t\t\tif ( hasExplicitWidths ) {\n\t\t\t\t// Redistribute as if block is already removed.\n\t\t\t\tconst widths = getRedistributedColumnWidths( innerBlocks, 100 );\n\n\t\t\t\tinnerBlocks = getMappedColumnWidths( innerBlocks, widths );\n\t\t\t}\n\t\t}\n\n\t\treplaceInnerBlocks( clientId, innerBlocks );\n\t}\n\n\treturn (\n\t\t<PanelBody title={ __( 'Settings' ) }>\n\t\t\t{ canInsertColumnBlock && (\n\t\t\t\t<>\n\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\tlabel={ __( 'Columns' ) }\n\t\t\t\t\t\tvalue={ count }\n\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\tupdateColumns( count, Math.max( minCount, value ) )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmin={ Math.max( 1, minCount ) }\n\t\t\t\t\t\tmax={ Math.max( 6, count ) }\n\t\t\t\t\t/>\n\t\t\t\t\t{ count > 6 && (\n\t\t\t\t\t\t<Notice status=\"warning\" isDismissible={ false }>\n\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t'This column count exceeds the recommended amount and may cause visual breakage.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</Notice>\n\t\t\t\t\t) }\n\t\t\t\t</>\n\t\t\t) }\n\t\t\t<ToggleControl\n\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\tlabel={ __( 'Stack on mobile' ) }\n\t\t\t\tchecked={ isStackedOnMobile }\n\t\t\t\tonChange={ () =>\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\tisStackedOnMobile: ! isStackedOnMobile,\n\t\t\t\t\t} )\n\t\t\t\t}\n\t\t\t/>\n\t\t</PanelBody>\n\t);\n}\n\nfunction ColumnsEditContainer( { attributes, setAttributes, clientId } ) {\n\tconst { isStackedOnMobile, verticalAlignment, templateLock } = attributes;\n\tconst registry = useRegistry();\n\tconst { getBlockOrder } = useSelect( blockEditorStore );\n\tconst { updateBlockAttributes } = useDispatch( blockEditorStore );\n\n\tconst classes = clsx( {\n\t\t[ `are-vertically-aligned-${ verticalAlignment }` ]: verticalAlignment,\n\t\t[ `is-not-stacked-on-mobile` ]: ! isStackedOnMobile,\n\t} );\n\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classes,\n\t} );\n\tconst innerBlocksProps = useInnerBlocksProps( blockProps, {\n\t\tdefaultBlock: DEFAULT_BLOCK,\n\t\tdirectInsert: true,\n\t\torientation: 'horizontal',\n\t\trenderAppender: false,\n\t\ttemplateLock,\n\t} );\n\n\t/**\n\t * Update all child Column blocks with a new vertical alignment setting\n\t * based on whatever alignment is passed in. This allows change to parent\n\t * to overide anything set on a individual column basis.\n\t *\n\t * @param {string} newVerticalAlignment The vertical alignment setting.\n\t */\n\tfunction updateAlignment( newVerticalAlignment ) {\n\t\tconst innerBlockClientIds = getBlockOrder( clientId );\n\n\t\t// Update own and child Column block vertical alignments.\n\t\t// This is a single action; the batching prevents creating multiple history records.\n\t\tregistry.batch( () => {\n\t\t\tsetAttributes( { verticalAlignment: newVerticalAlignment } );\n\t\t\tupdateBlockAttributes( innerBlockClientIds, {\n\t\t\t\tverticalAlignment: newVerticalAlignment,\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls>\n\t\t\t\t<BlockVerticalAlignmentToolbar\n\t\t\t\t\tonChange={ updateAlignment }\n\t\t\t\t\tvalue={ verticalAlignment }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<InspectorControls>\n\t\t\t\t<ColumnInspectorControls\n\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t\t\tisStackedOnMobile={ isStackedOnMobile }\n\t\t\t\t/>\n\t\t\t</InspectorControls>\n\t\t\t<div { ...innerBlocksProps } />\n\t\t</>\n\t);\n}\n\nfunction Placeholder( { clientId, name, setAttributes } ) {\n\tconst { blockType, defaultVariation, variations } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockVariations,\n\t\t\t\tgetBlockType,\n\t\t\t\tgetDefaultBlockVariation,\n\t\t\t} = select( blocksStore );\n\n\t\t\treturn {\n\t\t\t\tblockType: getBlockType( name ),\n\t\t\t\tdefaultVariation: getDefaultBlockVariation( name, 'block' ),\n\t\t\t\tvariations: getBlockVariations( name, 'block' ),\n\t\t\t};\n\t\t},\n\t\t[ name ]\n\t);\n\tconst { replaceInnerBlocks } = useDispatch( blockEditorStore );\n\tconst blockProps = useBlockProps();\n\n\treturn (\n\t\t<div { ...blockProps }>\n\t\t\t<__experimentalBlockVariationPicker\n\t\t\t\ticon={ blockType?.icon?.src }\n\t\t\t\tlabel={ blockType?.title }\n\t\t\t\tvariations={ variations }\n\t\t\t\tinstructions={ __( 'Divide into columns. Select a layout:' ) }\n\t\t\t\tonSelect={ ( nextVariation = defaultVariation ) => {\n\t\t\t\t\tif ( nextVariation.attributes ) {\n\t\t\t\t\t\tsetAttributes( nextVariation.attributes );\n\t\t\t\t\t}\n\t\t\t\t\tif ( nextVariation.innerBlocks ) {\n\t\t\t\t\t\treplaceInnerBlocks(\n\t\t\t\t\t\t\tclientId,\n\t\t\t\t\t\t\tcreateBlocksFromInnerBlocksTemplate(\n\t\t\t\t\t\t\t\tnextVariation.innerBlocks\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} }\n\t\t\t\tallowSkip\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nconst ColumnsEdit = ( props ) => {\n\tconst { clientId } = props;\n\tconst hasInnerBlocks = useSelect(\n\t\t( select ) =>\n\t\t\tselect( blockEditorStore ).getBlocks( clientId ).length > 0,\n\t\t[ clientId ]\n\t);\n\tconst Component = hasInnerBlocks ? ColumnsEditContainer : Placeholder;\n\n\treturn <Component { ...props } />;\n};\n\nexport default ColumnsEdit;\n"],"mappings":"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","ignoreList":[]}