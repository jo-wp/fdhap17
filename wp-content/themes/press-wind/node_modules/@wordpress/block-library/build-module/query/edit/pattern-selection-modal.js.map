{"version":3,"names":["useState","useMemo","useDispatch","Modal","SearchControl","useAsyncList","BlockContextProvider","store","blockEditorStore","__experimentalBlockPatternsList","BlockPatternsList","__","useBlockNameForPatterns","getTransformedBlocksFromPattern","usePatterns","searchPatterns","jsx","_jsx","jsxs","_jsxs","PatternSelectionModal","clientId","attributes","setIsPatternSelectionModalOpen","searchValue","setSearchValue","replaceBlock","selectBlock","onBlockPatternSelect","pattern","blocks","newBlocks","queryClientIds","blockPreviewContext","previewPostType","query","postType","blockNameForPatterns","blockPatterns","filteredBlockPatterns","shownBlockPatterns","overlayClassName","title","onRequestClose","isFullScreen","children","className","__nextHasNoMarginBottom","onChange","value","label","placeholder","shownPatterns","onClickPattern"],"sources":["@wordpress/block-library/src/query/edit/pattern-selection-modal.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useState, useMemo } from '@wordpress/element';\nimport { useDispatch } from '@wordpress/data';\nimport { Modal, SearchControl } from '@wordpress/components';\nimport { useAsyncList } from '@wordpress/compose';\nimport {\n\tBlockContextProvider,\n\tstore as blockEditorStore,\n\t__experimentalBlockPatternsList as BlockPatternsList,\n} from '@wordpress/block-editor';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport {\n\tuseBlockNameForPatterns,\n\tgetTransformedBlocksFromPattern,\n\tusePatterns,\n} from '../utils';\nimport { searchPatterns } from '../../utils/search-patterns';\n\nexport default function PatternSelectionModal( {\n\tclientId,\n\tattributes,\n\tsetIsPatternSelectionModalOpen,\n} ) {\n\tconst [ searchValue, setSearchValue ] = useState( '' );\n\tconst { replaceBlock, selectBlock } = useDispatch( blockEditorStore );\n\tconst onBlockPatternSelect = ( pattern, blocks ) => {\n\t\tconst { newBlocks, queryClientIds } = getTransformedBlocksFromPattern(\n\t\t\tblocks,\n\t\t\tattributes\n\t\t);\n\t\treplaceBlock( clientId, newBlocks );\n\t\tif ( queryClientIds[ 0 ] ) {\n\t\t\tselectBlock( queryClientIds[ 0 ] );\n\t\t}\n\t};\n\t// When we preview Query Loop blocks we should prefer the current\n\t// block's postType, which is passed through block context.\n\tconst blockPreviewContext = useMemo(\n\t\t() => ( {\n\t\t\tpreviewPostType: attributes.query.postType,\n\t\t} ),\n\t\t[ attributes.query.postType ]\n\t);\n\tconst blockNameForPatterns = useBlockNameForPatterns(\n\t\tclientId,\n\t\tattributes\n\t);\n\tconst blockPatterns = usePatterns( clientId, blockNameForPatterns );\n\tconst filteredBlockPatterns = useMemo( () => {\n\t\treturn searchPatterns( blockPatterns, searchValue );\n\t}, [ blockPatterns, searchValue ] );\n\tconst shownBlockPatterns = useAsyncList( filteredBlockPatterns );\n\n\treturn (\n\t\t<Modal\n\t\t\toverlayClassName=\"block-library-query-pattern__selection-modal\"\n\t\t\ttitle={ __( 'Choose a pattern' ) }\n\t\t\tonRequestClose={ () => setIsPatternSelectionModalOpen( false ) }\n\t\t\tisFullScreen\n\t\t>\n\t\t\t<div className=\"block-library-query-pattern__selection-content\">\n\t\t\t\t<div className=\"block-library-query-pattern__selection-search\">\n\t\t\t\t\t<SearchControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tonChange={ setSearchValue }\n\t\t\t\t\t\tvalue={ searchValue }\n\t\t\t\t\t\tlabel={ __( 'Search' ) }\n\t\t\t\t\t\tplaceholder={ __( 'Search' ) }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<BlockContextProvider value={ blockPreviewContext }>\n\t\t\t\t\t<BlockPatternsList\n\t\t\t\t\t\tblockPatterns={ filteredBlockPatterns }\n\t\t\t\t\t\tshownPatterns={ shownBlockPatterns }\n\t\t\t\t\t\tonClickPattern={ onBlockPatternSelect }\n\t\t\t\t\t/>\n\t\t\t\t</BlockContextProvider>\n\t\t\t</div>\n\t\t</Modal>\n\t);\n}\n"],"mappings":"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","ignoreList":[]}