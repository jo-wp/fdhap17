/**
 * External dependencies
 */
import { type BrowserHistory } from 'history';
export interface EnhancedHistory extends BrowserHistory {
    getLocationWithParams: () => Location;
}
declare function push(params: Record<string, any>, state: Record<string, any>): void;
declare function replace(params: Record<string, any>, state: Record<string, any>): void;
declare function getLocationWithParams(): any;
declare const _default: {
    push: typeof push;
    replace: typeof replace;
    getLocationWithParams: typeof getLocationWithParams;
    action: import("history").Action;
    location: import("history").Location;
    createHref(to: import("history").To): string;
    go(delta: number): void;
    back(): void;
    forward(): void;
    listen(listener: import("history").Listener): () => void;
    block(blocker: import("history").Blocker): () => void;
};
export default _default;
//# sourceMappingURL=history.d.ts.map