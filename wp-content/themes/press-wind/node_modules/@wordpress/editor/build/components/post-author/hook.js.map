{"version":3,"names":["_i18n","require","_element","_data","_htmlEntities","_coreData","_store","_constants","useAuthorsQuery","search","authorId","authors","postAuthor","useSelect","select","getUser","getUsers","coreStore","getEditedPostAttribute","editorStore","_authorId","query","AUTHORS_QUERY","BASE_QUERY","authorOptions","useMemo","fetchedAuthors","map","author","value","id","label","decodeEntities","name","foundAuthor","findIndex","currentAuthor","__"],"sources":["@wordpress/editor/src/components/post-author/hook.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useMemo } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport { AUTHORS_QUERY, BASE_QUERY } from './constants';\n\nexport function useAuthorsQuery( search ) {\n\tconst { authorId, authors, postAuthor } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getUser, getUsers } = select( coreStore );\n\t\t\tconst { getEditedPostAttribute } = select( editorStore );\n\t\t\tconst _authorId = getEditedPostAttribute( 'author' );\n\t\t\tconst query = { ...AUTHORS_QUERY };\n\n\t\t\tif ( search ) {\n\t\t\t\tquery.search = search;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tauthorId: _authorId,\n\t\t\t\tauthors: getUsers( query ),\n\t\t\t\tpostAuthor: getUser( _authorId, BASE_QUERY ),\n\t\t\t};\n\t\t},\n\t\t[ search ]\n\t);\n\n\tconst authorOptions = useMemo( () => {\n\t\tconst fetchedAuthors = ( authors ?? [] ).map( ( author ) => {\n\t\t\treturn {\n\t\t\t\tvalue: author.id,\n\t\t\t\tlabel: decodeEntities( author.name ),\n\t\t\t};\n\t\t} );\n\n\t\t// Ensure the current author is included in the dropdown list.\n\t\tconst foundAuthor = fetchedAuthors.findIndex(\n\t\t\t( { value } ) => postAuthor?.id === value\n\t\t);\n\n\t\tlet currentAuthor = [];\n\t\tif ( foundAuthor < 0 && postAuthor ) {\n\t\t\tcurrentAuthor = [\n\t\t\t\t{\n\t\t\t\t\tvalue: postAuthor.id,\n\t\t\t\t\tlabel: decodeEntities( postAuthor.name ),\n\t\t\t\t},\n\t\t\t];\n\t\t} else if ( foundAuthor < 0 && ! postAuthor ) {\n\t\t\tcurrentAuthor = [\n\t\t\t\t{\n\t\t\t\t\tvalue: 0,\n\t\t\t\t\tlabel: __( '(No author)' ),\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\n\t\treturn [ ...currentAuthor, ...fetchedAuthors ];\n\t}, [ authors, postAuthor ] );\n\n\treturn { authorId, authorOptions, postAuthor };\n}\n"],"mappings":";;;;;;AAGA,IAAAA,KAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AACA,IAAAG,aAAA,GAAAH,OAAA;AACA,IAAAI,SAAA,GAAAJ,OAAA;AAKA,IAAAK,MAAA,GAAAL,OAAA;AACA,IAAAM,UAAA,GAAAN,OAAA;AAbA;AACA;AACA;;AAOA;AACA;AACA;;AAIO,SAASO,eAAeA,CAAEC,MAAM,EAAG;EACzC,MAAM;IAAEC,QAAQ;IAAEC,OAAO;IAAEC;EAAW,CAAC,GAAG,IAAAC,eAAS,EAChDC,MAAM,IAAM;IACb,MAAM;MAAEC,OAAO;MAAEC;IAAS,CAAC,GAAGF,MAAM,CAAEG,eAAU,CAAC;IACjD,MAAM;MAAEC;IAAuB,CAAC,GAAGJ,MAAM,CAAEK,YAAY,CAAC;IACxD,MAAMC,SAAS,GAAGF,sBAAsB,CAAE,QAAS,CAAC;IACpD,MAAMG,KAAK,GAAG;MAAE,GAAGC;IAAc,CAAC;IAElC,IAAKb,MAAM,EAAG;MACbY,KAAK,CAACZ,MAAM,GAAGA,MAAM;IACtB;IAEA,OAAO;MACNC,QAAQ,EAAEU,SAAS;MACnBT,OAAO,EAAEK,QAAQ,CAAEK,KAAM,CAAC;MAC1BT,UAAU,EAAEG,OAAO,CAAEK,SAAS,EAAEG,qBAAW;IAC5C,CAAC;EACF,CAAC,EACD,CAAEd,MAAM,CACT,CAAC;EAED,MAAMe,aAAa,GAAG,IAAAC,gBAAO,EAAE,MAAM;IACpC,MAAMC,cAAc,GAAG,CAAEf,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAI,EAAE,EAAGgB,GAAG,CAAIC,MAAM,IAAM;MAC3D,OAAO;QACNC,KAAK,EAAED,MAAM,CAACE,EAAE;QAChBC,KAAK,EAAE,IAAAC,4BAAc,EAAEJ,MAAM,CAACK,IAAK;MACpC,CAAC;IACF,CAAE,CAAC;;IAEH;IACA,MAAMC,WAAW,GAAGR,cAAc,CAACS,SAAS,CAC3C,CAAE;MAAEN;IAAM,CAAC,KAAMjB,UAAU,EAAEkB,EAAE,KAAKD,KACrC,CAAC;IAED,IAAIO,aAAa,GAAG,EAAE;IACtB,IAAKF,WAAW,GAAG,CAAC,IAAItB,UAAU,EAAG;MACpCwB,aAAa,GAAG,CACf;QACCP,KAAK,EAAEjB,UAAU,CAACkB,EAAE;QACpBC,KAAK,EAAE,IAAAC,4BAAc,EAAEpB,UAAU,CAACqB,IAAK;MACxC,CAAC,CACD;IACF,CAAC,MAAM,IAAKC,WAAW,GAAG,CAAC,IAAI,CAAEtB,UAAU,EAAG;MAC7CwB,aAAa,GAAG,CACf;QACCP,KAAK,EAAE,CAAC;QACRE,KAAK,EAAE,IAAAM,QAAE,EAAE,aAAc;MAC1B,CAAC,CACD;IACF;IAEA,OAAO,CAAE,GAAGD,aAAa,EAAE,GAAGV,cAAc,CAAE;EAC/C,CAAC,EAAE,CAAEf,OAAO,EAAEC,UAAU,CAAG,CAAC;EAE5B,OAAO;IAAEF,QAAQ;IAAEc,aAAa;IAAEZ;EAAW,CAAC;AAC/C","ignoreList":[]}