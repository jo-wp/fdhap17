/**
 * WordPress dependencies
 */
import { __experimentalHStack as HStack, __experimentalVStack as VStack, __experimentalHeading as Heading, __experimentalSpacer as Spacer } from '@wordpress/components';

/**
 * Internal dependencies
 */
import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
function Header({
  title
}) {
  return /*#__PURE__*/_jsx(VStack, {
    className: "dataforms-layouts__dropdown-header",
    spacing: 4,
    children: /*#__PURE__*/_jsxs(HStack, {
      alignment: "center",
      children: [/*#__PURE__*/_jsx(Heading, {
        level: 2,
        size: 13,
        children: title
      }), /*#__PURE__*/_jsx(Spacer, {})]
    })
  });
}
function DataFormCombinedEdit({
  field,
  data,
  onChange,
  hideLabelFromVision
}) {
  var _field$children;
  const className = 'dataforms-combined-edit';
  const visibleChildren = ((_field$children = field.children) !== null && _field$children !== void 0 ? _field$children : []).map(fieldId => field.fields.find(({
    id
  }) => id === fieldId)).filter(childField => !!childField);
  const children = visibleChildren.map(child => {
    return /*#__PURE__*/_jsx("div", {
      className: "dataforms-combined-edit__field",
      children: /*#__PURE__*/_jsx(child.Edit, {
        data: data,
        field: child,
        onChange: onChange
      })
    }, child.id);
  });
  const Stack = field.direction === 'horizontal' ? HStack : VStack;
  return /*#__PURE__*/_jsxs(_Fragment, {
    children: [!hideLabelFromVision && /*#__PURE__*/_jsx(Header, {
      title: field.label
    }), /*#__PURE__*/_jsx(Stack, {
      spacing: 4,
      className: className,
      as: "fieldset",
      children: children
    })]
  });
}
export default DataFormCombinedEdit;
//# sourceMappingURL=index.js.map